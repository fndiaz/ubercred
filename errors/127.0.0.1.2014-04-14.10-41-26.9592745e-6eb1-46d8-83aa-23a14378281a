(dp1
S'output'
p2
S'<class \'gluon.contrib.pg8000.errors.ProgrammingError\'> (\'ERROR\', \'42P07\', \'relation "empresa" already exists\')'
p3
sS'layer'
p4
S'/home/fernado/web2py/tronco/applications/ubercred/models/config.py'
p5
sS'code'
p6
S'from gluon.storage import Storage\n\nconfig = Storage(\n        db=Storage(),\n        auth=Storage(),\n        mail=Storage()\n        )\n\n#config.db.uri = "mysql://root:yma2578k@localhost/adm"\nconfig.db.uri = "postgres:pg8000://postgres:123456@127.0.0.1/ubercred"\n#config.db.uri = "sqlite://hosts.sqlite"\nconfig.db.pool_size = 10\nconfig.db.check_reserved = [\'all\']\n#config.migrate_enable=True\n#config.migrate=True\n\ndb = DAL(**config.db)\n\n# logging\nimport logging\nlogger = logging.getLogger("web2py.app.blog")\nlogger.setLevel(logging.DEBUG)\n\n#auth Rbac\nfrom gluon.tools import Auth\n\nauth = Auth(db, controller="initial", function="user")\n\n#settings\nauth.settings.remember_me_form = False\nauth.settings.formstyle = "divs"\nauth.settings.login_next = URL(a=\'ubercred\', c=\'initial\', f=\'principal\')\nauth.settings.logout_next = URL(\'user?_next=\')\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\n#auth.settings.formstyle = "divs"\nauth.settings.actions_disabled = [\'register\']\n\nauth.messages.logged_in = \'Bem Vindo\' \nauth.messages.logged_out = \'At\xc3\xa9 logo\'\nauth.messages.access_denied = \'Acesso negado! Contate o administrador\'\nauth.messages.invalid_email = \'email Inv\xc3\xa1lido\'\nauth.messages.invalid_login = \'Login Inv\xc3\xa1lido\'\n\n#mail\nmail = auth.settings.mailer\nmail.settings.server = "zmail.ad2.com.br:587"\nmail.settings.sender = "smtp_avisos@ad2.com.br"\nmail.settings.login = "smtp_avisos@ad2.com.br:ad2root"\n\n\n#signals\ndef notifica(form):\n\tlogger.info("notifica")\n\tmail.send(\n\t\tto="fndiaz02@gmail.com",\n\t\tsubject="Usuario %(first_name)s pendente" % form.vars,\n\t\tmessage="<html>Voce tem um novo usuario para aprovacao %(first_name)s %(last_name)s </html>" % form.vars\n\t)\n\n#auth.settings.register_onaccept = notifica\n#auth.settings.register_onaccept = funcao\n\n#messages\n#auth.messages.login_button = "Entrar"\n\ndb.define_table("empresa",\n\tField("nome", "string"),\n\tformat="%(nome)s")\n\n#authfields\nauth.settings.extra_fields[\'auth_user\'] = [\n\tField("funcao", requires=IS_IN_SET(["agente", "supervisor"])),\n\tField("id_empresa", db.empresa),\n\tField("lembrete", \'text\'),\n#\tField("photo", "upload"),\n#\tField("gender", requires=IS_IN_SET(["masculino","feminino"]))\n]\n\n\n#janrain\n#from gluon.contrib.login_methods.rpx_account import use_janrain\n#use_janrain(auth, filename="private/janrain.key")\n\nauth.define_tables(username=True)\n\n#genericas views\nif request.is_local:\n\tresponse.generic_patterns = [\'*\']\n\n#import datetime\n#response\nresponse.title= "titulo response"\nresponse.meta.keywords= "chave, outra, e outra"\n\nif not \'raiz\' in session:\n    session.raiz = \'/home/fernado/web2py/tronco\'\n\n#if not \'ano\' in session:\n#    session.ano = \'0\'\n\n#if not \'mes\' in session:\n#    session.mes = \'0\'\n\n#if not \'form_ano\' in session:\n#    now = datetime.datetime.now()\n#    ano = now.year\n#    lista=[]\n#    for i in range(12):\n#        lista.append(ano)\n#        ano = ano - 1\n#    session.form_ano = lista\n\n\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'gluon.contrib.pg8000.errors'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of ProgrammingError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of ProgrammingError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of ProgrammingError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of ProgrammingError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of ProgrammingError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of ProgrammingError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of ProgrammingError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of ProgrammingError object>'
p35
sS'__class__'
p36
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of ProgrammingError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of ProgrammingError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of ProgrammingError object>"
p45
sS'args'
p46
S'(\'ERROR\', \'42P07\', \'relation "empresa" already exists\')'
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of ProgrammingError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of ProgrammingError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of ProgrammingError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of ProgrammingError object>"
p57
ssS'evalue'
p58
S'(\'ERROR\', \'42P07\', \'relation "empresa" already exists\')'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\xc6A\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">ajax</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">application</td><td valign="top">:</td><td><div>ubercred</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0x35723b0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cid</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">client</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">controller</td><td valign="top">:</td><td><div>initial</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">env</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/fernado/web2py/tronco/applications/ubercred/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/fernado/web2py/tronco</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_options</td><td valign="top">:</td><td><div>&lt;Values at 0x3558290: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;fernando-workstation&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/fernado/web2py/tronco&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;winservice&#x27;: &#x27;&#x27;, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;profiler_filename&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;123456&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;interfaces&#x27;: None, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/fernado/web2py/tronco</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept</td><td valign="top">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_encoding</td><td valign="top">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_language</td><td valign="top">:</td><td><div>pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_connection</td><td valign="top">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_host</td><td valign="top">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_user_agent</td><td valign="top">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.114 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path_info</td><td valign="top">:</td><td><div>/ubercred/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">query_string</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_addr</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_port</td><td valign="top">:</td><td><div>52219</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_method</td><td valign="top">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_uri</td><td valign="top">:</td><td><div>/ubercred/initial/principal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">script_name</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_name</td><td valign="top">:</td><td><div>fernando-workstation</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_port</td><td valign="top">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_protocol</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_software</td><td valign="top">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_original_uri</td><td valign="top">:</td><td><div>/ubercred/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_path</td><td valign="top">:</td><td><div>/home/fernado/web2py/tronco</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div>2.5.1-stable+timestamp.2013.06.06.15.39.19</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_errors</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fdc749ab270&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_file_wrapper</td><td valign="top">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x34add50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_input</td><td valign="top">:</td><td><div>&lt;socket._fileobject object at 0x7fdc748b42d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multiprocess</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multithread</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_url_scheme</td><td valign="top">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_version</td><td valign="top">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">extension</td><td valign="top">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">folder</td><td valign="top">:</td><td><div>/home/fernado/web2py/tronco/applications/ubercred/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">function</td><td valign="top">:</td><td><div>principal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">get_vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">global_settings</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/fernado/web2py/tronco/applications/ubercred/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/fernado/web2py/tronco</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_options</td><td valign="top">:</td><td><div>&lt;Values at 0x3558290: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;fernando-workstation&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/fernado/web2py/tronco&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;winservice&#x27;: &#x27;&#x27;, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;profiler_filename&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;123456&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;interfaces&#x27;: None, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/fernado/web2py/tronco</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>fernando-workstation</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div>2.5.1-stable+timestamp.2013.06.06.15.39.19</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_https</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_local</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_restful</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">now</td><td valign="top">:</td><td><div>datetime.datetime(2014, 4, 14, 10, 41, 26, 919001)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">post_vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">url</td><td valign="top">:</td><td><div>/ubercred/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">utcnow</td><td valign="top">:</td><td><div>datetime.datetime(2014, 4, 14, 13, 41, 26, 919092)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uuid</td><td valign="top">:</td><td><div>ubercred/127.0.0.1.2014-04-14.10-41-26.9592745e-6eb1-46d8-83aa-23a14378281a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">environ</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT</td><td valign="top">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_ENCODING</td><td valign="top">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_LANGUAGE</td><td valign="top">:</td><td><div>pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONNECTION</td><td valign="top">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_HOST</td><td valign="top">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_USER_AGENT</td><td valign="top">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.114 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">PATH_INFO</td><td valign="top">:</td><td><div>/ubercred/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">QUERY_STRING</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_ADDR</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_PORT</td><td valign="top">:</td><td><div>52219</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_METHOD</td><td valign="top">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_URI</td><td valign="top">:</td><td><div>/ubercred/initial/principal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SCRIPT_NAME</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_NAME</td><td valign="top">:</td><td><div>fernando-workstation</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PORT</td><td valign="top">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PROTOCOL</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_SOFTWARE</td><td valign="top">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">WEB2PY_ORIGINAL_URI</td><td valign="top">:</td><td><div>/ubercred/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.errors</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fdc749ab270&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.file_wrapper</td><td valign="top">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x34add50&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.input</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0x35723b0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multiprocess</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multithread</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.url_scheme</td><td valign="top">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.version</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr></table></div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/home/fernado/web2py/tronco/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x3553230, file "/home/.../applications/ubercred/models/config.py", line 1>'
p73
ssS'lnum'
p74
I212
sS'lines'
p75
(dp76
I207
S'    try:'
p77
sI208
S'        if isinstance(code, types.CodeType):'
p78
sI209
S'            ccode = code'
p79
sI210
S'        else:'
p80
sI211
S'            ccode = compile2(code, layer)'
p81
sI212
S'        exec ccode in environment'
p82
sI213
S'    except HTTP:'
p83
sI214
S'        raise'
p84
sI215
S'    except RestrictedError:'
p85
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p86
ssS'call'
p87
S"(code='from gluon.storage import Storage\\n\\nconfig = Stor...   ano = ano - 1\\n#    session.form_ano = lista\\n\\n\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/home/fernado/web2py/tronco/applications/ubercred/models/config.py')"
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/home/fernado/web2py/tronco/applications/ubercred/models/config.py'
p92
sg68
(dp93
S'builtinformat'
p94
S'<built-in function format>'
p95
ssg74
I69
sg75
(dp96
I64
S'#messages'
p97
sI65
S'#auth.messages.login_button = "Entrar"'
p98
sI66
S''
sI67
S'db.define_table("empresa",'
p99
sI68
S'\tField("nome", "string"),'
p100
sI69
S'\tformat="%(nome)s")'
p101
sI70
S''
sI71
S'#authfields'
p102
sI72
S"auth.settings.extra_fields['auth_user'] = ["
p103
sI73
S'\tField("funcao", requires=IS_IN_SET(["agente", "supervisor"])),'
p104
ssg87
S'()'
p105
sg89
S'<module>'
p106
sa(dp107
g66
S'/home/fernado/web2py/tronco/gluon/dal.py'
p108
sg68
(dp109
S'fields'
p110
S'(<gluon.dal.Field object>,)'
p111
sS'self'
p112
S'<DAL uri="postgres:pg8000:******@127.0.0.1/ubercred">'
p113
sS'args'
p114
S"{'format': '%(nome)s'}"
p115
sS'tablename'
p116
S"'empresa'"
p117
sS'table'
p118
S'undefined'
p119
sS'self.lazy_define_table'
p120
S'<bound method DAL.lazy_define_table of <DAL uri="postgres:pg8000:******@127.0.0.1/ubercred">>'
p121
ssg74
I7788
sg75
(dp122
I7783
S'                    % (tablename,invalid_args))'
p123
sI7784
S'        if self._lazy_tables and not tablename in self._LAZY_TABLES:'
p124
sI7785
S'            self._LAZY_TABLES[tablename] = (tablename,fields,args)'
p125
sI7786
S'            table = None'
p126
sI7787
S'        else:'
p127
sI7788
S'            table = self.lazy_define_table(tablename,*fields,**args)'
p128
sI7789
S'        if not tablename in self.tables:'
p129
sI7790
S'            self.tables.append(tablename)'
p130
sI7791
S'        return table'
p131
sI7792
S''
ssg87
S'(self=<DAL uri="postgres:pg8000:******@127.0.0.1/ubercred">, tablename=\'empresa\', *fields=(<gluon.dal.Field object>,), **args={\'format\': \'%(nome)s\'})'
p132
sg89
S'define_table'
p133
sa(dp134
g66
S'/home/fernado/web2py/tronco/gluon/dal.py'
p135
sg68
(dp136
S'polymodel'
p137
S'None'
p138
ssg74
I7825
sg75
(dp139
I7820
S'            try:'
p140
sI7821
S'                GLOBAL_LOCKER.acquire()'
p141
sI7822
S'                self._lastsql = self._adapter.create_table('
p142
sI7823
S'                    table,migrate=migrate,'
p143
sI7824
S'                    fake_migrate=fake_migrate,'
p144
sI7825
S'                    polymodel=polymodel)'
p145
sI7826
S'            finally:'
p146
sI7827
S'                GLOBAL_LOCKER.release()'
p147
sI7828
S'        else:'
p148
sI7829
S'            table._dbt = None'
p149
ssg87
S'(self=<DAL uri="postgres:pg8000:******@127.0.0.1/ubercred">, tablename=\'empresa\', *fields=(<gluon.dal.Field object>,), **args={\'format\': \'%(nome)s\'})'
p150
sg89
S'lazy_define_table'
p151
sa(dp152
g66
S'/home/fernado/web2py/tronco/gluon/dal.py'
p153
sg68
(dp154
S'query'
p155
S"'CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);'"
p156
sS'self'
p157
S'<gluon.dal.PostgreSQLAdapter object>'
p158
sS'table'
p159
S'<Table empresa (id,nome)>'
p160
sS'self.create_sequence_and_triggers'
p161
S'<bound method PostgreSQLAdapter.create_sequence_...triggers of <gluon.dal.PostgreSQLAdapter object>>'
p162
ssg74
I963
sg75
(dp163
I960
S'                               % datetime.datetime.today().isoformat())'
p164
sI961
S"                logfile.write(query + '\\n')"
p165
sI962
S'            if not fake_migrate:'
p166
sI963
S'                self.create_sequence_and_triggers(query,table)'
p167
sI964
S'                table._db.commit()'
p168
sI965
S'                # Postgres geom fields are added now,'
p169
sI966
S'                # after the table has been created'
p170
sI967
S'                for query in postcreation_fields:'
p171
sI958
S'            if table._dbt:'
p172
sI959
S"                logfile.write('timestamp: %s\\n'"
p173
ssg87
S'(self=<gluon.dal.PostgreSQLAdapter object>, table=<Table empresa (id,nome)>, migrate=True, fake_migrate=False, polymodel=None)'
p174
sg89
S'create_table'
p175
sa(dp176
g66
S'/home/fernado/web2py/tronco/gluon/dal.py'
p177
sg68
(dp178
S'query'
p179
S"'CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);'"
p180
sS'self'
p181
S'<gluon.dal.PostgreSQLAdapter object>'
p182
sS'self.execute'
p183
S'<bound method PostgreSQLAdapter.execute of <gluon.dal.PostgreSQLAdapter object>>'
p184
ssg74
I2595
sg75
(dp185
I2592
S"        # self.execute('CREATE SEQUENCE %s;' % table._sequence_name)"
p186
sI2593
S'        # self.execute("ALTER TABLE %s ALTER COLUMN %s SET DEFAULT NEXTVAL(\'%s\');" \\'
p187
sI2594
S'        #              % (table._tablename, table._fieldname, table._sequence_name))'
p188
sI2595
S'        self.execute(query)'
p189
sI2596
S''
sI2597
S"    REGEX_URI = re.compile('^(?P<user>[^:@]+)(\\:(?P<password>[^@]*))?@(?P<host>[^\\:@]+)(\\:(?P<port>[0-9]+))?/(?P<db>[^\\?]+)(\\?sslmode=(?P<sslmode>.+))?$')"
p190
sI2598
S''
sI2599
S"    def __init__(self,db,uri,pool_size=0,folder=None,db_codec ='UTF-8',"
p191
sI2590
S'    def create_sequence_and_triggers(self, query, table, **args):'
p192
sI2591
S'        # following lines should only be executed if table._sequence_name does not exist'
p193
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, query='CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);', table=<Table empresa (id,nome)>, **args={})"
p194
sg89
S'create_sequence_and_triggers'
p195
sa(dp196
g66
S'/home/fernado/web2py/tronco/gluon/dal.py'
p197
sg68
(dp198
S'a'
S"('CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);',)"
p199
sS'self'
p200
S'<gluon.dal.PostgreSQLAdapter object>'
p201
sS'b'
g21
sS'self.log_execute'
p202
S'<bound method PostgreSQLAdapter.log_execute of <gluon.dal.PostgreSQLAdapter object>>'
p203
ssg74
I1784
sg75
(dp204
I1779
S'        self.db._timings.append((command,time.time()-t0))'
p205
sI1780
S'        del self.db._timings[:-TIMINGSSIZE]'
p206
sI1781
S'        return ret'
p207
sI1782
S''
sI1783
S'    def execute(self, *a, **b):'
p208
sI1784
S'        return self.log_execute(*a, **b)'
p209
sI1785
S''
sI1786
S'    def represent(self, obj, fieldtype):'
p210
sI1787
S'        field_is_type = fieldtype.startswith'
p211
sI1788
S'        if isinstance(obj, CALLABLETYPES):'
p212
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);',), **b={})"
p213
sg89
S'execute'
p214
sa(dp215
g66
S'/home/fernado/web2py/tronco/gluon/dal.py'
p216
sg68
(dp217
S'a'
S"('CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);',)"
p218
sS'b'
g21
sS'self'
p219
S'<gluon.dal.PostgreSQLAdapter object>'
p220
sS'ret'
p221
g119
sS'self.cursor'
p222
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p223
sS'command'
p224
S"'CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);'"
p225
sS'self.cursor.execute'
p226
S'<bound method CursorWrapper._fn of <gluon.contrib.pg8000.dbapi.CursorWrapper object>>'
p227
ssg74
I1778
sg75
(dp228
I1773
S'            command = self.filter_sql_command(command)'
p229
sI1774
S'        if self.db._debug:'
p230
sI1775
S"            LOGGER.debug('SQL: %s' % command)"
p231
sI1776
S'        self.db._lastsql = command'
p232
sI1777
S'        t0 = time.time()'
p233
sI1778
S'        ret = self.cursor.execute(command, *a[1:], **b)'
p234
sI1779
S'        self.db._timings.append((command,time.time()-t0))'
p235
sI1780
S'        del self.db._timings[:-TIMINGSSIZE]'
p236
sI1781
S'        return ret'
p237
sI1782
S''
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);',), **b={})"
p238
sg89
S'log_execute'
p239
sa(dp240
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/dbapi.py'
p241
sg68
(dp242
S'self'
p243
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p244
sS'args'
p245
S"('CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);',)"
p246
sS'fn'
p247
S'<function execute>'
p248
sS'kwargs'
p249
g21
ssg74
I246
sg75
(dp250
I241
S''
sI242
S'def require_open_cursor(fn):'
p251
sI243
S'    def _fn(self, *args, **kwargs):'
p252
sI244
S'        if self.cursor == None:'
p253
sI245
S'            raise CursorClosedError()'
p254
sI246
S'        return fn(self, *args, **kwargs)'
p255
sI247
S'    return _fn'
p256
sI248
S''
sI249
S'##'
p257
sI250
S'# The class of object returned by the {@link #ConnectionWrapper.cursor cursor method}.'
p258
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, *args=('CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);',), **kwargs={})"
p259
sg89
S'_fn'
p260
sa(dp261
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/dbapi.py'
p262
sg68
(dp263
S'self._execute'
p264
S'<bound method CursorWrapper._execute of <gluon.contrib.pg8000.dbapi.CursorWrapper object>>'
p265
sS'self'
p266
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p267
sS'args'
p268
S'()'
p269
sS'operation'
p270
S"'CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);'"
p271
ssg74
I317
sg75
(dp272
I320
S'        new_query, new_args = convert_paramstyle(paramstyle, operation, args)'
p273
sI321
S'        try:'
p274
sI312
S'    @require_open_cursor'
p275
sI313
S'    def execute(self, operation, args=()):'
p276
sI314
S'        if not self._connection.in_transaction:'
p277
sI315
S'            self._connection.begin()'
p278
sI316
S'        self._override_rowcount = None'
p279
sI317
S'        self._execute(operation, args)'
p280
sI318
S''
sI319
S'    def _execute(self, operation, args=()):'
p281
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, operation='CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);', args=())"
p282
sg89
g214
sa(dp283
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/dbapi.py'
p284
sg68
(dp285
S'new_args'
p286
S'()'
p287
sS'self.cursor'
p288
S'<gluon.contrib.pg8000.interface.Cursor object>'
p289
sS'self'
p290
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p291
sS'new_query'
p292
S"'CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);'"
p293
sS'self.cursor.execute'
p294
S'<bound method Cursor.execute of <gluon.contrib.pg8000.interface.Cursor object>>'
p295
ssg74
I322
sg75
(dp296
I320
S'        new_query, new_args = convert_paramstyle(paramstyle, operation, args)'
p297
sI321
S'        try:'
p298
sI322
S'            self.cursor.execute(new_query, *new_args)'
p299
sI323
S'        except ConnectionClosedError:'
p300
sI324
S"            # can't rollback in this case"
p301
sI325
S'            raise'
p302
sI326
S'        except:'
p303
sI317
S'        self._execute(operation, args)'
p304
sI318
S''
sI319
S'    def _execute(self, operation, args=()):'
p305
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, operation='CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);', args=())"
p306
sg89
S'_execute'
p307
sa(dp308
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/interface.py'
p309
sg68
(dp310
S'self._stmt.execute'
p311
S'<bound method PreparedStatement.execute of <gluo...ntrib.pg8000.interface.PreparedStatement object>>'
p312
sS'kwargs'
p313
g21
sS'self'
p314
S'<gluon.contrib.pg8000.interface.Cursor object>'
p315
sS'args'
p316
S'()'
p317
sS'self._stmt'
p318
S'<gluon.contrib.pg8000.interface.PreparedStatement object>'
p319
ssg74
I399
sg75
(dp320
I394
S'                ## print "SimpleQuery:", query'
p321
sI395
S'                self._stmt = SimpleStatement(self.connection, query)'
p322
sI396
S'            else:'
p323
sI397
S'                # use PostgreSQL Extended Query Protocol'
p324
sI398
S'                self._stmt = PreparedStatement(self.connection, query, statement_name="", *[{"type": type(x), "value": x} for x in args])'
p325
sI399
S'            self._stmt.execute(*args, **kwargs)'
p326
sI400
S'        finally:'
p327
sI401
S'            self.connection._unnamed_prepared_statement_lock.release()'
p328
sI402
S''
sI403
S'    ##'
p329
ssg87
S"(self=<gluon.contrib.pg8000.interface.Cursor object>, query='CREATE TABLE empresa(\\n    id SERIAL PRIMARY KEY,\\n    nome VARCHAR(512)\\n);', *args=(), **kwargs={})"
p330
sg89
g214
sa(dp331
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/interface.py'
p332
sg68
(dp333
S'kwargs.get'
p334
S'<built-in method get of dict object>'
p335
sS'args'
p336
S'()'
p337
sS'self.c'
p338
S'<gluon.contrib.pg8000.protocol.Connection object>'
p339
sS'self'
p340
S'<gluon.contrib.pg8000.interface.PreparedStatement object>'
p341
sS'cmd'
p342
g119
sS'self._row_desc'
p343
S'None'
p344
sS'self.c.bind'
p345
S'<bound method Connection._fn of <gluon.contrib.pg8000.protocol.Connection object>>'
p346
sS'self._statement_name'
p347
S"''"
p348
sS'self._parse_row_desc'
p349
S'(None, [])'
p350
sS'kwargs'
p351
g21
sS'self._portal_name'
p352
S"'pg8000_portal_4'"
p353
ssg74
I169
sg75
(dp354
I164
S'                self._ongoing_row_count = 0'
p355
sI165
S'            if self._portal_name != None:'
p356
sI166
S'                self.c.close_portal(self._portal_name)'
p357
sI167
S'            self._command_complete = False'
p358
sI168
S'            self._portal_name = "pg8000_portal_%s" % self._statement_number'
p359
sI169
S'            self._row_desc, cmd = self.c.bind(self._portal_name, self._statement_name, args, self._parse_row_desc, kwargs.get("stream"))'
p360
sI170
S'            if self._row_desc:'
p361
sI171
S'                # We execute our cursor right away to fill up our cache.  This'
p362
sI172
S'                # prevents the cursor from being destroyed, apparently, by a rogue'
p363
sI173
S'                # Sync between Bind and Execute.  Since it is quite likely that'
p364
ssg87
S'(self=<gluon.contrib.pg8000.interface.PreparedStatement object>, *args=(), **kwargs={})'
p365
sg89
g214
sa(dp366
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py'
p367
sg68
(dp368
S'self'
p369
S'<gluon.contrib.pg8000.protocol.Connection object>'
p370
sS'args'
p371
S"('pg8000_portal_4', '', (), (None, []), None)"
p372
sS'fn'
p373
S'<function bind>'
p374
sS'kwargs'
p375
g21
ssg74
I943
sg75
(dp376
I938
S''
sI939
S'def sync_on_error(fn):'
p377
sI940
S'    def _fn(self, *args, **kwargs):'
p378
sI941
S'        try:'
p379
sI942
S'            self._sock_lock.acquire()'
p380
sI943
S'            return fn(self, *args, **kwargs)'
p381
sI944
S'        except:'
p382
sI945
S'            self._sync()'
p383
sI946
S'            raise'
p384
sI947
S'        finally:'
p385
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, *args=('pg8000_portal_4', '', (), (None, []), None), **kwargs={})"
p386
sg89
g260
sa(dp387
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py'
p388
sg68
(dp389
S'reader.handle_messages'
p390
S'<bound method MessageReader.handle_messages of <gluon.contrib.pg8000.protocol.MessageReader object>>'
p391
sS'reader'
p392
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p393
ssg74
I1142
sg75
(dp394
I1137
S''
sI1138
S'        # Return the new row desc, since it will have the format types we'
p395
sI1139
S'        # asked the server for'
p396
sI1140
S'        reader.add_message(RowDescription, lambda msg: (msg, None))'
p397
sI1141
S''
sI1142
S'        return reader.handle_messages()'
p398
sI1143
S''
sI1144
S'    def _copy_in_response(self, copyin, fileobj, old_reader):'
p399
sI1145
S'        if fileobj == None:'
p400
sI1146
S'            raise CopyQueryWithoutStreamError()'
p401
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, portal='pg8000_portal_4', statement='', params=(), parse_data=(None, []), copy_stream=None)"
p402
sg89
S'bind'
p403
sa(dp404
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py'
p405
sg68
(dp406
S'msg'
p407
S'<gluon.contrib.pg8000.protocol.NoData object>'
p408
sS'handler'
p409
S'<bound method Connection._bind_nodata of <gluon.contrib.pg8000.protocol.Connection object>>'
p410
sS'retval'
p411
S'0'
sS'args'
p412
S"('pg8000_portal_4', <gluon.contrib.pg8000.protocol.MessageReader object>, None)"
p413
sS'kwargs'
p414
g21
ssg74
I911
sg75
(dp415
I906
S'            msg = self._conn._read_message()'
p416
sI907
S'            msg_handled = False'
p417
sI908
S'            for (msg_class, handler, args, kwargs) in self._msgs:'
p418
sI909
S'                if isinstance(msg, msg_class):'
p419
sI910
S'                    msg_handled = True'
p420
sI911
S'                    retval = handler(msg, *args, **kwargs)'
p421
sI912
S'                    if retval:'
p422
sI913
S'                        # The handler returned a true value, meaning that the'
p423
sI914
S'                        # message loop should be aborted.'
p424
sI915
S'                        if exc != None:'
p425
ssg87
S'(self=<gluon.contrib.pg8000.protocol.MessageReader object>)'
p426
sg89
S'handle_messages'
p427
sa(dp428
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py'
p429
sg68
(dp430
S'reader.handle_messages'
p431
S'<bound method MessageReader.handle_messages of <gluon.contrib.pg8000.protocol.MessageReader object>>'
p432
sS'reader'
p433
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p434
ssg74
I1181
sg75
(dp435
I1184
S''
sI1185
S'    @sync_on_error'
p436
sI1176
S'        reader.add_message(CopyOutResponse, self._copy_out_response, copy_stream, reader)'
p437
sI1177
S'        reader.add_message(CopyInResponse, self._copy_in_response, copy_stream, reader)'
p438
sI1178
S"        reader.add_message(CommandComplete, lambda msg, out: out.setdefault('msg', msg) and False, output)"
p439
sI1179
S'        reader.add_message(ReadyForQuery, lambda msg: 1)'
p440
sI1180
S'        reader.delay_raising_exception = True'
p441
sI1181
S'        reader.handle_messages()'
p442
sI1182
S''
sI1183
S"        old_reader.return_value((None, output['msg']))"
p443
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, msg=<gluon.contrib.pg8000.protocol.NoData object>, portal='pg8000_portal_4', old_reader=<gluon.contrib.pg8000.protocol.MessageReader object>, copy_stream=None)"
p444
sg89
S'_bind_nodata'
p445
sa(dp446
g66
S'/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py'
p447
sg68
(dp448
S'exc'
p449
S'ProgrammingError(\'ERROR\', \'42P07\', \'relation "empresa" already exists\')'
p450
ssg74
I916
sg75
(dp451
I911
S'                    retval = handler(msg, *args, **kwargs)'
p452
sI912
S'                    if retval:'
p453
sI913
S'                        # The handler returned a true value, meaning that the'
p454
sI914
S'                        # message loop should be aborted.'
p455
sI915
S'                        if exc != None:'
p456
sI916
S'                            raise exc'
p457
sI917
S'                        return retval'
p458
sI918
S'                    elif hasattr(self, "_retval"):'
p459
sI919
S'                        # The handler told us to return -- used for non-true'
p460
sI920
S'                        # return values'
p461
ssg87
S'(self=<gluon.contrib.pg8000.protocol.MessageReader object>)'
p462
sg89
g427
sasS'pyver'
p463
S'Python 2.7.3: /usr/bin/python (prefix: /usr)'
p464
sS'session'
p465
g61
(S's\x1a\x00\x00\x00<div><table></table></div>'
tRp466
sS'etype'
p467
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p468
sS'date'
p469
S'Mon Apr 14 10:41:29 2014'
p470
sS'response'
p471
g61
(S's3\x10\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0x35721b8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_ubercred</td><td valign="top">:</td><td><div>127.0.0.1-e81e3eff-6e9c-493d-b10d-72e2a6b549f2<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">delimiters</td><td valign="top">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">files</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">generic_patterns</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">headers</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">X-Powered-By</td><td valign="top">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">menu</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">meta</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">models_to_run</td><td valign="top">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^initial/\\w+\\.py$</div></td></tr><tr><td><div>^initial/principal/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">postprocessing</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_cookie_expires</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_data_name</td><td valign="top">:</td><td><div>session_data_ubercred</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_filename</td><td valign="top">:</td><td><div>/home/fernado/web2py/tronco/applications/ubercred/sessions/127.0.0.1-e81e3eff-6e9c-493d-b10d-72e2a6b549f2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id</td><td valign="top">:</td><td><div>127.0.0.1-e81e3eff-6e9c-493d-b10d-72e2a6b549f2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_name</td><td valign="top">:</td><td><div>session_id_ubercred</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_new</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_storage_type</td><td valign="top">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">status</td><td valign="top">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">view</td><td valign="top">:</td><td><div>initial/principal.html</div></td></tr></table></div>'
tRp472
sS'locals'
p473
(dp474
S'exc'
p475
S'ProgrammingError(\'ERROR\', \'42P07\', \'relation "empresa" already exists\')'
p476
sS'msg_class'
p477
S"<class 'gluon.contrib.pg8000.protocol.ReadyForQuery'>"
p478
sS'self'
p479
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p480
sg46
S'()'
p481
sS'handler'
p482
S'<function <lambda>>'
p483
sS'kwargs'
p484
g21
sS'msg'
p485
S'<ReadyForQuery Idle in Failed Transaction>'
p486
sS'msg_handled'
p487
S'True'
p488
sS'retval'
p489
S'1'
sssS'traceback'
p490
S'Traceback (most recent call last):\n  File "/home/fernado/web2py/tronco/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/fernado/web2py/tronco/applications/ubercred/models/config.py", line 69, in <module>\n    format="%(nome)s")\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 7788, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 7825, in lazy_define_table\n    polymodel=polymodel)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 963, in create_table\n    self.create_sequence_and_triggers(query,table)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 2595, in create_sequence_and_triggers\n    self.execute(query)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1784, in execute\n    return self.log_execute(*a, **b)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1778, in log_execute\n    ret = self.cursor.execute(command, *a[1:], **b)\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/dbapi.py", line 246, in _fn\n    return fn(self, *args, **kwargs)\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/dbapi.py", line 317, in execute\n    self._execute(operation, args)\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/dbapi.py", line 322, in _execute\n    self.cursor.execute(new_query, *new_args)\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/interface.py", line 399, in execute\n    self._stmt.execute(*args, **kwargs)\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/interface.py", line 169, in execute\n    self._row_desc, cmd = self.c.bind(self._portal_name, self._statement_name, args, self._parse_row_desc, kwargs.get("stream"))\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py", line 943, in _fn\n    return fn(self, *args, **kwargs)\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py", line 1142, in bind\n    return reader.handle_messages()\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py", line 911, in handle_messages\n    retval = handler(msg, *args, **kwargs)\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py", line 1181, in _bind_nodata\n    reader.handle_messages()\n  File "/home/fernado/web2py/tronco/gluon/contrib/pg8000/protocol.py", line 916, in handle_messages\n    raise exc\nProgrammingError: (\'ERROR\', \'42P07\', \'relation "empresa" already exists\')\n'
p491
s.