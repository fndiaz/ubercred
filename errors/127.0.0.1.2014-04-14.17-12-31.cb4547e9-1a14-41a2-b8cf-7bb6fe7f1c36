(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'DAL' object has no attribute ''"
p3
sS'layer'
p4
S'/home/fernado/web2py/tronco/applications/ubercred/controllers/initial.py'
p5
sS'code'
p6
S'# coding=UTF-8\nimport  json\nfrom datetime import datetime\nfrom pprint import pprint\n\n\n@auth.requires_login()\ndef principal():\n\tfunc \t= session.auth.user.funcao\n\tid_user = session.auth.user.id\n\tif func == "supervisor":\n\t\tauth.add_membership(1, id_user)\n\t\tredirect(URL(emprestimo))\n\tif func == "agente":\n\t\tauth.add_membership(2, id_user)\n\t\tredirect(URL(form_emprestimo))\n\tif func == "admin":\n\t\tprint \'aa\'\n\t\tauth.add_membership(3, id_user)\n\t\tredirect(URL(emprestimo))\n\t\n\treturn response.render("initial/principal.html", teste=teste)\n\ndef cpf_json():\n\tif request.vars.func == "pend":\n\t\tquery = (db.emprestimo.id_empresa == db.empresa.id) \\\n\t\t& (db.emprestimo.estado == None) & (db.emprestimo.telefone == "")\n\n\tif request.vars.func == "total":\n\t\tquery = (db.emprestimo.id_empresa == db.empresa.id)\n\n\tcpf = db(query).select(db.emprestimo.cpf)\n\tlista = []\n\tfor dado in cpf:\n\t\tlista.append(dado.cpf)\n\tlista = list(set(lista))\n\n\treturn response.json(lista)\n\ndef estados_json():\n\tprint request.vars\n\twith open(\'%s/applications/ubercred/views/estados.json\' %(session.raiz)) as json_data:\n\t\tjson_data = json.load(json_data)\n\t\t#print json_data[0]\n\t\t#for dado in json_data:\n\t\t##\tprint dado\n\n\treturn response.json(json_data)\n\t#return response.render("estados.json")\n\ndef cidades_json():\n\tprint request.vars\n\twith open(\'%s/applications/ubercred/views/cidades.json\' %(session.raiz)) as json_data:\n\t\tjson_data = json.load(json_data)\n\t\tprint(json_data)\n\n\treturn response.json(json_data)\t\n\t#return response.render("cidades.json")\n\ndef user():\n\tprint request.args(0)\n\tif request.args(0) == \'login\':\n\t\t\treturn response.render("login/user.html", \n\t\t\t\t\t\t\t\t\t\tuser=auth())\n\n\tif request.args(0) == \'register\':\n\t\treturn response.render("login/user.html", \n\t\t\t\t\t\t\tuser=auth.register())\n\n\tif request.args(0) == \'not_authorized\':\n\t\tprint \'nao\'\n\n\tif request.args(0) == \'profile\':\n\t\treturn response.render("login/user.html", \n\t\t\t\t\t\t\tuser=auth.profile())\n\n\treturn response.render("login/user.html", user=auth())\n\n##---------------------------Emepresa\n@auth.requires_membership(\'admin\')\ndef form_empresa():\n\tresponse.title = \'Empresa\'\n\tid_edit\t= request.vars[\'id_edit\']\n\n\tif id_edit is None:\n\t\tform \t= SQLFORM(db.empresa)\n\telse:\n\t\tform \t= SQLFORM(db.empresa, id_edit)\n\n\tif form.process().accepted:\n\t\tredirect(URL("empresa"))\n\n\treturn response.render("initial/show_form.html", form=form)\n\n@auth.requires_membership(\'admin\')\ndef empresa():\n\tprint session\n\tresponse.title = \'empresa\'\n\tempresa =\tdb(db.empresa).select(orderby=db.empresa.id)\n\n\treturn response.render("initial/list_empresa.html", \n\t\tempresa=empresa)\n\n##---------------------------Status\n@auth.requires_membership(\'admin\')\ndef form_status():\n\tresponse.title = "Status"\n\tid_edit = request.vars[\'id_edit\']\n\n\tif id_edit is None:\n\t\tform \t= SQLFORM(db.status)\n\telse:\n\t\tform \t= SQLFORM(db.status, id_edit)\n\n\tif form.process().accepted:\n\t\tredirect(URL("status"))\n\n\treturn response.render("initial/show_form.html", form=form)\t\n\n@auth.requires_membership(\'admin\')\ndef status():\n\tresponse.title = \'status\'\n\tstatus \t=\tdb(db.status).select(orderby=db.status.id)\n\n\treturn response.render("initial/list_status.html", \n\t\tstatus=status)\n\n##---------------------------Funcao\n@auth.requires_membership(\'admin\')\ndef form_funcao():\n\tresponse.title = \'fun\xc3\xa7\xc3\xa3o\'\n\tid_edit\t= request.vars[\'id_edit\']\n\n\tif id_edit is None:\n\t\tform \t= SQLFORM(db.funcao)\n\telse:\n\t\tform \t= SQLFORM(db.funcao, id_edit)\n\n\tif form.process().accepted:\n\t\tredirect(URL("funcao"))\n\n\treturn response.render("initial/show_form.html", form=form)\n\n@auth.requires_membership(\'admin\')\ndef funcao():\n\t#print session\n\tresponse.title = \'fun\xc3\xa7\xc3\xa3o\'\n\tfuncao =\tdb(db.funcao).select(orderby=db.funcao.id)\n\n\treturn response.render("initial/list_funcao.html", \n\t\tfuncao=funcao)\n\n##---------------------------Banco\n@auth.requires_membership(\'admin\')\ndef form_banco():\n\tresponse.title = \'banco\'\n\tid_edit\t= request.vars[\'id_edit\']\n\n\tif id_edit is None:\n\t\tform \t= SQLFORM(db.banco)\n\telse:\n\t\tform \t= SQLFORM(db.banco, id_edit)\n\n\tif form.process().accepted:\n\t\tredirect(URL("banco"))\n\n\treturn response.render("initial/show_form.html", form=form)\n\n@auth.requires_membership(\'admin\')\ndef banco():\n\t#print session\n\tresponse.title = \'banco\'\n\tbanco =\tdb(db.banco).select(orderby=db.banco.id)\n\n\treturn response.render("initial/list_banco.html", \n\t\tbanco=banco)\n\n##---------------------------Orgao\n@auth.requires_membership(\'admin\')\ndef form_orgao():\n\tresponse.title = \'org\xc3\xa3o\'\n\tid_edit\t= request.vars[\'id_edit\']\n\n\tif id_edit is None:\n\t\tform \t= SQLFORM(db.orgao)\n\telse:\n\t\tform \t= SQLFORM(db.orgao, id_edit)\n\n\tif form.process().accepted:\n\t\tredirect(URL("orgao"))\n\n\treturn response.render("initial/show_form.html", form=form)\n\n@auth.requires_membership(\'admin\')\ndef orgao():\n\t#print session\n\tresponse.title = \'org\xc3\xa3o\'\n\torgao =\tdb(db.orgao).select(orderby=db.orgao.id)\n\n\treturn response.render("initial/list_orgao.html", \n\t\torgao=orgao)\n\n\n##---------------------------Emprestimo\n@auth.requires_login()\ndef form_emprestimo():\n\tid_edit = request.vars[\'id_edit\']\n\tprint id_edit\n\tprint session.auth.user\n\tfuncao = session.auth.user.funcao\n\tif funcao == "agente":\n\t\tredirect(URL(form_emprestimo_agt))\n\tif funcao == "supervisor":\n\t\tif id_edit != None:\n\t\t\tredirect(URL("initial",\n\t\t"form_emprestimo_spv?id_edit="+id_edit))\n\t\telse:\n\t\t\tredirect(URL(form_emprestimo_spv))\n\tif funcao == "admin":\n\t\tif id_edit != None:\n\t\t\tredirect(URL("initial",\n\t\t"form_emprestimo_spv?id_edit="+id_edit))\n\t\telse:\n\t\t\tredirect(URL(form_emprestimo_spv))\n\n\n@auth.requires_login()\ndef form_emprestimo_agt():\n\tresponse.title = \'Emprestimo agente\'\n\tid_edit = request.vars[\'id_edit\']\n\tdate = datetime.now()\n\tdate = date.strftime("%Y-%m-%d %I:%M:%S")\n\tls_user = get_user()\n\tprint session.auth.user.id\n\tquery = (db.auth_user.id == session.auth.user.id)\n\tlem = db(query).select(db.auth_user.lembrete)\n\tlem = lem[0].lembrete\n\n\tif id_edit is None:\n\t\tform \t= SQLFORM(db.emprestimo)\n\telse:\n\t\tform \t= SQLFORM(db.emprestimo, id_edit)\n\n\tif form.process().accepted:\n\t\tsession.flash="Registro processado"\n\t\tredirect(URL("form_emprestimo_agt")) \n\telif form.errors:\n\t\tresponse.flash=("Ops, algo est\xc3\xa1 errado")\n\t\n\treturn response.render("initial/form_emprestimo_agt.html", \n\t\t\t\tdate=date, lem=lem, form=form, ls_user=ls_user)\n\n@auth.requires_membership(\'supervisor\', \'admin\')\ndef form_emprestimo_spv():\n\tresponse.title = \'Emprestimo supervisor\'\n\tid_edit = request.vars[\'id_edit\']\n\tcidade = ""\n\tls_user = get_user()\n\tprint ls_user\n\n\tif id_edit is None:\n\t\tform \t= SQLFORM(db.emprestimo)\n\telse:\n\t\tform \t= SQLFORM(db.emprestimo, id_edit)\n\t\tform.element(_name=\'vendedora\')[\'_readonly\'] = \'readonly\'\n\t\tform.element(_name=\'id_empresa\')[\'_readonly\'] = \'readonly\'\n\t\tquery = db.emprestimo.id == id_edit\n\t\tcidade = db(query).select(db.emprestimo.cidade)\n\t\tcidade = cidade[0].cidade\n\n\tif form.process().accepted:\n\t\tsession.flash=("Registro processado")\n\t\tredirect(URL("emprestimo2")) \n\telse:\n\t\tprint request.vars\n\t\n\treturn response.render("initial/form_emprestimo_spv.html", \n\t\tcidade=cidade, id_edit=id_edit, form=form, ls_user=ls_user)\n\ndef get_user():\n\t# get user empresa\n\tuser = session.auth.user.username\n\tuser_emp_id = session.auth.user.id_empresa\n\tquery = (db.empresa.id == session.auth.user.id_empresa)\n\tuser_emp = db(query).select(db.empresa.nome)\n\tls_user=[]\n\tls_user.append(user)\n\tls_user.append(user_emp[0].nome)\n\tls_user.append(user_emp_id)\n\tprint ls_user\n\treturn ls_user\n\n\n@auth.requires(auth.has_membership(\'supervisor\') or auth.has_membership(\'admin\'))\ndef emprestimo():\n\tresponse.title = "Emprestimos pendentes"\n\tquery = (db.emprestimo.id_empresa == db.empresa.id) \\\n\t\t& (db.emprestimo.estado == None) & (db.emprestimo.telefone == "")\n\t#\n\tpaginate \t=\t10\n\tif not request.vars.page:\n\t\tredirect(URL(vars={\'page\':1}))\n\telse:\n\t\tpage \t=\tint(request.vars.page)\n\tstart \t=\t(page-1)*paginate\n\tend \t=\tpage*paginate\n\tregis \t=\tdb(query).count()\n\tprint regis\n\tx=1\n\tif regis%paginate == 0:\n\t\tx=0\n\t#\t\n\tcon = db(query).select(limitby=(start,end))\n\tgrid \t= SQLFORM.grid(db.emprestimo, user_signature=False)\n\t\n\treturn response.render("initial/list_emprestimo.html", con=con, grid=grid,\n\t\tend=end, paginacao="on", regis=regis, paginate=paginate, x=x)\n\n@auth.requires_membership(\'supervisor\', \'admin\')\ndef emprestimo2():\n\tresponse.title = "Emprestimos totais"\n\tquery = (db.emprestimo.id_empresa == db.empresa.id)\n\t#\n\tpaginate \t=\t10\n\tif not request.vars.page:\n\t\tredirect(URL(vars={\'page\':1}))\n\telse:\n\t\tpage \t=\tint(request.vars.page)\n\tstart \t=\t(page-1)*paginate\n\tend \t=\tpage*paginate\n\tregis \t=\tdb(query).count()\n\tprint regis\n\tx=1\n\tif regis%paginate == 0:\n\t\tx=0\n\t#\t\n\tcon = db(query).select(left=db.estados.on(db.estados.id == db.emprestimo.estado), limitby=(start,end), orderby=db.emprestimo.id)\n\t\n\treturn response.render("initial/list_emprestimo2.html", con=con,\n\t\tend=end, paginacao=\'on\', regis=regis, paginate=paginate, x=x)\n\ndef emprestimo_agt():\n\tresponse.title = "Emprestimos"\n\tuser = session.auth.user.username\n\tquery = (db.emprestimo.id_empresa == db.empresa.id) &\\\n\t(db.emprestimo.vendedora == user)\n\t#\n\tpaginate \t=\t10\n\tif not request.vars.page:\n\t\tredirect(URL(vars={\'page\':1}))\n\telse:\n\t\tpage \t=\tint(request.vars.page)\n\tstart \t=\t(page-1)*paginate\n\tend \t=\tpage*paginate\n\tregis \t=\tdb(query).count()\n\tprint regis\n\tx=1\n\tif regis%paginate == 0:\n\t\tx=0\n\t#\n\n\tcon = db(query).select(left=db.estados.on(db.estados.id == db.emprestimo.estado), limitby=(start,end), orderby=db.emprestimo.id)\n\treturn response.render("initial/list_emprestimo2.html", con=con,\n\t\tend=end, paginacao=\'on\', regis=regis, paginate=paginate, x=x)\n\n\ndef detalhes_emprestimo():\n\tresponse.title = "Detalhes"\n\tid_det = request.vars.id_det\n\tquery=((db.emprestimo.id == id_det) & (db.emprestimo.id_empresa == db.empresa.id))\n\tcon=db(query).select()\n\tprint con\n\n\treturn response.render("initial/detalhes_emprestimo.html", con=con)\n\ndef busca_emp_pend():\n\tresponse.title = "Emprestimos pendentes"\n\tquery = (db.emprestimo.id_empresa == db.empresa.id) \\\n\t\t& (db.emprestimo.estado == None) & (db.emprestimo.telefone == "")\\\n\t\t& (db.emprestimo.cpf == request.vars.cpf)\n\n\tcon = db(query).select(orderby=db.emprestimo.id)\n\t\n\treturn response.render("initial/list_emprestimo.html", con=con,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpaginacao=\'off\')\n\ndef busca_emp_total():\n\tresponse.title = "Emprestimos pendentes"\n\tquery = (db.emprestimo.id_empresa == db.empresa.id)\\\n\t\t& (db.emprestimo.cpf == request.vars.cpf)\n\n\tcon = db(query).select(left=db.estados.on(db.estados.id == db.emprestimo.estado), orderby=db.emprestimo.id)\n\t\n\treturn response.render("initial/list_emprestimo2.html", con=con,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpaginacao=\'off\')\n\n\n\n##---------------------------Situa\xc3\xa7\xc3\xa3o\n@auth.requires_membership(\'supervisor\')\ndef form_situacao():\n\tresponse.title = \'situa\xc3\xa7\xc3\xa3o\'\n\tid_emp = request.vars.id_emp\n\tprint id_emp\n\n\tif id_emp is None:\n\t\tform \t= SQLFORM(db.situacao)\n\telse:\n\t\tquery = db.emprestimo.id == id_emp\n\t\temp =db(query).select(db.emprestimo.id, db.emprestimo.nome)\n\t\temp = emp[0]\n\t\tform \t= SQLFORM(db.situacao)\n\n\tif form.process().accepted:\n\t\tsession.flash=("Registro processado")\n\t\tredirect(URL("situacao?id_emp=%s" %(id_emp))) \n\telse:\n\t\tprint request.vars\n\n\treturn response.render("initial/form_situacao.html", form=form, \n\t\t\t\t\t\t\t\t\t\t\t\temp=emp, id_emp=id_emp)\t\n\n@auth.requires_membership(\'supervisor\')\ndef situacao():\n\tprint request.vars.id_emp\n\tid_emp = request.vars.id_emp\n\tresponse.title = "Situa\xc3\xa7\xc3\xa3o"\n\tquery = (db.situacao.id_emprestimo == db.emprestimo.id) &\\\n\t(db.situacao.id_status == db.status.id) & (db.situacao.id_emprestimo == id_emp)\n\t#\n\tpaginate \t=\t10\n\tif not request.vars.page:\n\t\tredirect(URL(vars={\'page\':1, \'id_emp\':id_emp}))\n\telse:\n\t\tpage \t=\tint(request.vars.page)\n\tstart \t=\t(page-1)*paginate\n\tend \t=\tpage*paginate\n\tregis \t=\tdb(query).count()\n\t#print regis\n\tx=1\n\tif regis%paginate == 0:\n\t\tx=0\n\t\n\tcon = db(query).select(limitby=(start,end), orderby=db.situacao.id)\n\t#con = db(query).select()\n\t\n\treturn response.render("initial/list_situacao.html", con=con, id_emp=id_emp, \n\t\tx=x, end=end, paginacao=\'on\', regis=regis, paginate=paginate) \t\n\n@auth.requires_membership(\'admin\')\ndef users():\n\tprint \'users\'\n\tgrid \t= SQLFORM.grid(db.auth_user, csv=False, user_signature=False)\n\t#print usuarios\n\t\n\treturn response.render("initial/show_grid.html", grid=grid)\n\ndef group():\n\tprint \'users\'\n\tgrid \t= SQLFORM.grid(db.auth_group, user_signature=False)\n\t#print usuarios\n\t\n\treturn response.render("initial/show_grid.html", grid=grid)\n\ndef membership():\n\tprint \'users\'\n\tgrid \t= SQLFORM.grid(db.auth_membership, user_signature=False)\n\t#print usuarios\n\t\n\treturn response.render("initial/show_grid.html", grid=grid)\n\ndef delete():\n\tfuncao \t=\trequest.vars[\'tabela\']\n\tid_tab\t=\trequest.vars[\'id_tab\']\n\tprint funcao\n\tprint id_tab\n\tif funcao \t== "empresa":\n\t\ttabela \t=\t db.empresa.id\n\tif funcao \t==\t"status":\n\t\ttabela \t= \tdb.status.id\n\tif funcao \t==\t"emprestimo":\n\t\ttabela \t= \tdb.emprestimo.id\n\tif funcao \t==\t"situacao":\n\t\ttabela \t= \tdb.situacao.id\n\tif funcao \t==\t"funcao":\n\t\ttabela \t= \tdb.funcao.id\n\tif funcao \t==\t"banco":\n\t\ttabela \t= \tdb.banco.id\n\tif funcao \t==\t"orgao":\n\t\ttabela \t= \tdb.orgao.id\n\n\tdb(tabela == id_tab).delete()\t\n\tredirect(URL(funcao))\n\ndef lembrete(): \n\tquery = (db.auth_user.id == session.auth.user.id)\n\tdb(query).update(lembrete=request.vars.lembrete)\n\tredirect(URL(form_emprestimo))\n\t\n\n\n\n\t\n\n\n\n\nresponse._vars=response._caller(emprestimo2)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/fernado/web2py/tronco/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/fernado/web2py/tronco/applications/ubercred/controllers/initial.py", line 508, in <module>\n  File "/home/fernado/web2py/tronco/gluon/globals.py", line 194, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/fernado/web2py/tronco/gluon/tools.py", line 3022, in f\n    return action(*a, **b)\n  File "/home/fernado/web2py/tronco/applications/ubercred/controllers/initial.py", line 337, in emprestimo2\n    con = db(query).select(left=db.estados.on(db.estados.id == db.emprestimo.estado), limitby=(start,end), orderby=db.emprestimo.id)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 9958, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1704, in select\n    return self._select_aux(sql,fields,attributes)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1685, in _select_aux\n    return processor(rows,fields,self._colnames,cacheable=cacheable)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 2055, in parse\n    value = self.parse_value(value,ft,blob_decode)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1903, in parse_value\n    return self.parsemap[key](value,field_type)\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1976, in parse_list_references\n    return [self.parse_reference(r, field_type[5:]) for r in value]\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 1909, in parse_reference\n    value._table, value._record = self.db[referee], None\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 7895, in __getitem__\n    return self.__getattr__(str(key))\n  File "/home/fernado/web2py/tronco/gluon/dal.py", line 7902, in __getattr__\n    return ogetattr(self, key)\nAttributeError: \'DAL\' object has no attribute \'\'\n'
p11
s.